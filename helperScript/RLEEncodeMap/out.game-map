30 180 18 64 13 0 4 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 1 3 1 4 9 1 18 0 1 1 1 5 1 6 8 7 1 1 18 0 1 1 10 8 1 1 18 0 1 9 10 7 1 1 18 0 1 9 10 7 1 1 18 0 1 9 10 7 1 1 18 0 1 1 10 8 1 1 18 0 1 1 2 2 9 1 18 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 1 2 2 1 1 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 1 11 1 12 9 10 18 0 1 10 1 13 1 14 8 7 1 10 18 0 1 10 10 7 1 10 18 0 1 10 10 15 1 10 18 0 1 16 10 7 1 10 18 0 1 16 10 7 1 10 18 0 1 16 1 17 1 18 8 7 1 10 18 0 1 10 1 19 1 20 9 10 18 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 1 10 2 2 1 10 26 0 4 10 1003 0

1 0 0
2 0 0
3 0 0
4 0 0
5 0 0
6 0 0
7 0 0
8 0 0
9 0 0
10 0 0
11 0 0
12 0 0
13 0 0
14 0 0
15 0 0
16 0 0
17 0 0
18 0 0
19 0 0
20 0 0

Map file consists of size and space separated RLE encoded tile ID's

After which is a list of all tiles and their flags and layer IDs

There is no need to separate rows.

Example:
{Width} {Height} {multiplier} {tileID} {multiplier} {tileID} ....

Tiles start from 1 (0 is empty) and continue in order. Look at the tileset

(You can easily encode maps with helperScript/encodeMap.py)
